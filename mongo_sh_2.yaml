apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongosh2-1
spec:
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mongodb/mongosh2-1
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kubernete.worker2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongosh2-1
spec:
  resources:
    requests:
      storage: 8Gi
  accessModes:
    - ReadWriteOnce # only allow one node can be read and write
  storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: mongosh2-1
  labels:
    run: mongosh2-1
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongosh2-1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongosh2-1
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongosh2-1
  serviceName: mongosh2-1
  template:
    metadata:
      labels:
        name: mongosh2-1
        run: mongosh2-1
    spec:
      restartPolicy: Always
      hostname: mongosh2-1
      containers:
        - image: mongo:6.0.2
          name: mongosh2-1
          ports:
            - name: mongosh2-1
              containerPort: 27017
          livenessProbe:
            exec:
              command:
              - mongo
              - --eval
              - db.adminCommand('ping')
              failureThreshold: 3
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - mongo
              - --eval
              - db.adminCommand('ping')
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: secrets-volume
              readOnly: true
              mountPath: /etc/mongodb/security
            - name: mongosh2-1
              mountPath: /data/db
          command: ["mongod"]
          args: ["--shardsvr", "--replSet", "rs2", "--dbpath", "/data/db", "--port", "27017", "--auth", "--keyFile", "/etc/mongodb/security/mongodb.key", "--bind_ip_all"]
          resources:
            limits:
              memory: "1024Mi"
              cpu: "1000m"
      volumes:
        - name: mongosh2-1
          persistentVolumeClaim:
            claimName: mongosh2-1
        - name: secrets-volume
          secret:
            secretName: mongodb.key
            defaultMode: 256

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongosh2-2
spec:
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mongodb/mongosh2-2
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kubernete.worker2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongosh2-2
spec:
  resources:
    requests:
      storage: 8Gi
  accessModes:
    - ReadWriteOnce # only allow one node can be read and write
  storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: mongosh2-2
  labels:
    run: mongosh2-2
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongosh2-2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongosh2-2
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongosh2-2
  serviceName: mongosh2-2
  template:
    metadata:
      labels:
        name: mongosh2-2
        run: mongosh2-2
    spec:
      restartPolicy: Always
      hostname: mongosh2-2
      containers:
        - image: mongo:6.0.2
          name: mongosh2-2
          ports:
            - name: mongosh2-2
              containerPort: 27017
          livenessProbe:
            exec:
              command:
              - mongo
              - --eval
              - db.adminCommand('ping')
              failureThreshold: 3
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - mongo
              - --eval
              - db.adminCommand('ping')
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: secrets-volume
              readOnly: true
              mountPath: /etc/mongodb/security
            - name: mongosh2-2
              mountPath: /data/db
          command: ["mongod"]
          args: ["--shardsvr", "--replSet", "rs2", "--dbpath", "/data/db", "--port", "27017", "--auth", "--keyFile", "/etc/mongodb/security/mongodb.key", "--bind_ip_all"]
          resources:
            limits:
              memory: "1024Mi"
              cpu: "1000m"
      volumes:
        - name: mongosh2-2
          persistentVolumeClaim:
            claimName: mongosh2-2
        - name: secrets-volume
          secret:
            secretName: mongodb.key
            defaultMode: 256

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongosh2-3
spec:
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mongodb/mongosh2-3
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kubernete.worker2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongosh2-3
spec:
  resources:
    requests:
      storage: 8Gi
  accessModes:
    - ReadWriteOnce # only allow one node can be read and write
  storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: mongosh2-3
  labels:
    run: mongosh2-3
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongosh2-3
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongosh2-3
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongosh2-3
  serviceName: mongosh2-3
  template:
    metadata:
      labels:
        name: mongosh2-3
        run: mongosh2-3
    spec:
      restartPolicy: Always
      hostname: mongosh2-3
      containers:
        - image: mongo:6.0.2
          name: mongosh2-3
          ports:
            - name: mongosh2-3
              containerPort: 27017
          livenessProbe:
            exec:
              command:
              - mongo
              - --eval
              - db.adminCommand('ping')
              failureThreshold: 3
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - mongo
              - --eval
              - db.adminCommand('ping')
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: secrets-volume
              readOnly: true
              mountPath: /etc/mongodb/security
            - name: mongosh2-3
              mountPath: /data/db
          command: ["mongod"]
          args: ["--shardsvr", "--replSet", "rs2", "--dbpath", "/data/db", "--port", "27017", "--auth", "--keyFile", "/etc/mongodb/security/mongodb.key", "--bind_ip_all"]
          resources:
            limits:
              memory: "1024Mi"
              cpu: "1000m"
      volumes:
        - name: mongosh2-3
          persistentVolumeClaim:
            claimName: mongosh2-3
        - name: secrets-volume
          secret:
            secretName: mongodb.key
            defaultMode: 256