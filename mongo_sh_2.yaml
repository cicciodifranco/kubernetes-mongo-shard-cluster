# Mongo shard replica set 1 node 1
apiVersion: v1
kind: Service
metadata:
  name: mongosh2-1
  labels:
    run: mongosh2-1
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongosh2-1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongosh2-1
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongosh2-1
  serviceName: mongosh2-1
  template:
    metadata:
      labels:
        name: mongosh2-1
        run: mongosh2-1
    spec:
      restartPolicy: Always
      hostname: mongosh2-1
      containers:
        - image: mongo:6.0.2
          name: mongosh2-1
          ports:
            - name: mongosh2-1
              containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secrets
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secrets
                  key: password
          volumeMounts:
            - name: mongosh2-1
              mountPath: /data/db
          command: ["mongod"]
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          args:
            [
              "--shardsvr",
              "--replSet",
              "rs1",
              "--dbpath",
              "/data/db",
              "--noauth",
              "--port",
              "27017",
              "--bind_ip_all",
            ]
      volumes:
        - name: mongosh2-1
          persistentVolumeClaim:
            claimName: mongosh2-1
---
# Mongo shard replica set 1 node 2
apiVersion: v1
kind: Service
metadata:
  name: mongosh2-2
  labels:
    run: mongosh2-2
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongosh2-2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongosh2-2
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongosh2-2
  serviceName: mongosh2-2
  template:
    metadata:
      labels:
        name: mongosh2-2
        run: mongosh2-2
    spec:
      restartPolicy: Always
      hostname: mongosh2-2
      containers:
        - image: mongo:6.0.2
          name: mongosh2-2
          ports:
            - name: mongosh2-2
              containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secrets
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secrets
                  key: password
          volumeMounts:
            - name: mongosh2-2
              mountPath: /data/db
          command: ["mongod"]
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          args:
            [
              "--shardsvr",
              "--replSet",
              "rs1",
              "--dbpath",
              "/data/db",
              "--noauth",
              "--port",
              "27017",
              "--bind_ip_all",
            ]
      volumes:
        - name: mongosh2-2
          persistentVolumeClaim:
            claimName: mongosh2-2
---
# Mongo shard replica set 1 node 3
apiVersion: v1
kind: Service
metadata:
  name: mongosh2-3
  labels:
    run: mongosh2-3
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongosh2-3
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongosh2-3
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongosh2-3
  serviceName: mongosh2-3
  template:
    metadata:
      labels:
        name: mongosh2-3
        run: mongosh2-3
    spec:
      restartPolicy: Always
      hostname: mongosh2-3
      containers:
        - image: mongo:6.0.2
          name: mongosh2-3
          ports:
            - name: mongosh2-3
              containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secrets
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secrets
                  key: password
          volumeMounts:
            - name: mongosh2-3
              mountPath: /data/db
          command: ["mongod"]
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          args:
            [
              "--shardsvr",
              "--replSet",
              "rs1",
              "--dbpath",
              "/data/db",
              "--noauth",
              "--port",
              "27017",
              "--bind_ip_all",
            ]
      volumes:
        - name: mongosh2-3
          persistentVolumeClaim:
          claimName: mongosh2-3
