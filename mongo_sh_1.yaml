apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongosh1-1
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mongodb/mongosh1-1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongosh1-1
spec:
  resources:
    requests:
      storage: 2Gi
  accessModes:
    - ReadWriteOnce # only allow one node can be read and write
  storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: mongosh1-1
  labels:
    run: mongosh1-1
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongosh1-1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongosh1-1
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongosh1-1
  serviceName: mongosh1-1
  template:
    metadata:
      labels:
        name: mongosh1-1
        run: mongosh1-1
    spec:
      restartPolicy: Always
      hostname: mongosh1-1
      containers:
        - image: mongo:6.0.2
          name: mongosh1-1
          ports:
            - name: mongosh1-1
              containerPort: 27017
          volumeMounts:
            - name: mongosh1-1
              mountPath: /data/db
          command: ["mongod"]
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          args: ["--shardsvr", "--replSet", "rs1", "--dbpath", "/data/db", "--port", "27017", "--bind_ip_all"]
      volumes:
        - name: mongosh1-1
          persistentVolumeClaim:
            claimName: mongosh1-1

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongosh1-2
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mongodb/mongosh1-2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongosh1-2
spec:
  resources:
    requests:
      storage: 2Gi
  accessModes:
    - ReadWriteOnce # only allow one node can be read and write
  storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: mongosh1-2
  labels:
    run: mongosh1-2
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongosh1-2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongosh1-2
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongosh1-2
  serviceName: mongosh1-2
  template:
    metadata:
      labels:
        name: mongosh1-2
        run: mongosh1-2
    spec:
      restartPolicy: Always
      hostname: mongosh1-2
      containers:
        - image: mongo:6.0.2
          name: mongosh1-2
          ports:
            - name: mongosh1-2
              containerPort: 27017
          volumeMounts:
            - name: mongosh1-2
              mountPath: /data/db
          command: ["mongod"]
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          args: ["--shardsvr", "--replSet", "rs1", "--dbpath", "/data/db", "--port", "27017", "--bind_ip_all"]
      volumes:
        - name: mongosh1-2
          persistentVolumeClaim:
            claimName: mongosh1-2

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongosh1-3
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mongodb/mongosh1-3
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongosh1-3
spec:
  resources:
    requests:
      storage: 2Gi
  accessModes:
    - ReadWriteOnce # only allow one node can be read and write
  storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: mongosh1-3
  labels:
    run: mongosh1-3
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongosh1-3
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongosh1-3
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongosh1-3
  serviceName: mongosh1-3
  template:
    metadata:
      labels:
        name: mongosh1-3
        run: mongosh1-3
    spec:
      restartPolicy: Always
      hostname: mongosh1-3
      containers:
        - image: mongo:6.0.2
          name: mongosh1-3
          ports:
            - name: mongosh1-3
              containerPort: 27017
          volumeMounts:
            - name: mongosh1-3
              mountPath: /data/db
          command: ["mongod"]
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          args: ["--shardsvr", "--replSet", "rs1", "--dbpath", "/data/db", "--port", "27017", "--bind_ip_all"]
      volumes:
        - name: mongosh1-3
          persistentVolumeClaim:
            claimName: mongosh1-3
