apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongocfg1
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mongodb/mongocfg1
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kubernete.worker1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongocfg1
spec:
  resources:
    requests:
      storage: 2Gi
  accessModes:
    - ReadWriteOnce # only allow one node can be read and write
  storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: mongocfg1
  labels:
    run: mongocfg1
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongocfg1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongocfg1
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongocfg1
  serviceName: mongocfg1
  template:
    metadata:
      labels:
        name: mongocfg1
        run: mongocfg1
    spec:
      restartPolicy: Always
      hostname: mongocfg1
      containers:
        - image: mongo:6.0.2
          name: mongocfg1
          ports:
            - name: mongocfg1
              containerPort: 27017
          volumeMounts:
            - name: secrets-volume
              readOnly: true
              mountPath: /etc/mongodb/security
            - name: mongocfg1
              mountPath: /data/db
          command: ["mongod"]
          args: ["--replSet", "cfgrs", "--dbpath", "/data/db", "--configsvr", "--port", "27017", "--auth", "--keyFile", "/etc/mongodb/security/mongodb.key", "--bind_ip_all"]
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: mongocfg1
          persistentVolumeClaim:
            claimName: mongocfg1
        - name: secrets-volume
          secret:
            secretName: mongodb.key
            defaultMode: 256

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongocfg2
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mongodb/mongocfg2
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kubernete.worker1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongocfg2
spec:
  resources:
    requests:
      storage: 2Gi
  accessModes:
    - ReadWriteOnce # only allow one node can be read and write
  storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: mongocfg2
  labels:
    run: mongocfg2
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongocfg2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongocfg2
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongocfg2
  serviceName: mongocfg2
  template:
    metadata:
      labels:
        name: mongocfg2
        run: mongocfg2
    spec:
      restartPolicy: Always
      hostname: mongocfg2
      containers:
        - image: mongo:6.0.2
          name: mongocfg2
          ports:
            - name: mongocfg2
              containerPort: 27017
          volumeMounts:
            - name: secrets-volume
              readOnly: true
              mountPath: /etc/mongodb/security
            - name: mongocfg2
              mountPath: /data/db
          command: ["mongod"]
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          args: ["--replSet", "cfgrs", "--dbpath", "/data/db", "--configsvr", "--port", "27017", "--auth", "--keyFile", "/etc/mongodb/security/mongodb.key", "--bind_ip_all"]
      volumes:
        - name: mongocfg2
          persistentVolumeClaim:
            claimName: mongocfg2
        - name: secrets-volume
          secret:
            secretName: mongodb.key
            defaultMode: 256

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongocfg3
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mongodb/mongocfg3
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kubernete.worker1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongocfg3
spec:
  resources:
    requests:
      storage: 2Gi
  accessModes:
    - ReadWriteOnce # only allow one node can be read and write
  storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: mongocfg3
  labels:
    run: mongocfg3
spec:
  ports:
    - port: 27017
      protocol: TCP
  selector:
    run: mongocfg3
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongocfg3
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongocfg3
  serviceName: mongocfg3
  template:
    metadata:
      labels:
        name: mongocfg3
        run: mongocfg3
    spec:
      restartPolicy: Always
      hostname: mongocfg3
      containers:
        - image: mongo:6.0.2
          name: mongocfg3
          ports:
            - name: mongocfg3
              containerPort: 27017
          volumeMounts:
            - name: secrets-volume
              readOnly: true
              mountPath: /etc/mongodb/security
            - name: mongocfg3
              mountPath: /data/db
          command: ["mongod"]
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          args: ["--replSet", "cfgrs", "--dbpath", "/data/db", "--configsvr", "--port", "27017", "--auth", "--keyFile", "/etc/mongodb/security/mongodb.key", "--bind_ip_all"]
      volumes:
        - name: mongocfg3
          persistentVolumeClaim:
            claimName: mongocfg3
        - name: secrets-volume
          secret:
            secretName: mongodb.key
            defaultMode: 256
